#!/bin/bash

isFirstIteration=true

function randHex(){
	num=$(randin 0 255) # Generate a random decimal number between 0 and 255 (maximum 2-digit range in hexadecimal).
	if $isFirstIteration;
	then
		rest=$(( num%2 ))
		until [ $rest -eq 0 ] # Keep reassigning until the number is even.
		do
			num=$(randin 0 255)
			rest=$(( num%2 ))
		done
		isFirstIteration=false
	fi
	num=$(echo "obase=16; ibase=10; $num" | bc) # Convert to hexadecimal.
	(( ${#num} == 1 )) && num="0$num" # Prefix with a 0 if the number is a single digit.
	echo $num # Return the number.
}

mac="$(randHex):" # Generate the first number and add a colon.

for i in {1..4} # Generate following four numbers and add a colon.
do
	var="$(randHex):"
        mac="$mac$var"
done

mac="$mac$(randHex)" # Generate the last (sixth) number.

echo $mac # Return generated MAC address.

