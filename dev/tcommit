#!/bin/bash

[[ -z "$1" ]] && git commit && exit 0 # Commit with no comments, e.g. after resolving conflicts in a merge.
[[ "$1" == "-"*  ]] && echo "The first argument has to be a commit message." && exit 1
currentBranch=$(git branch --show-current) || exit 1 # Not a git repo, exiting...
ticketCategory=$(echo "$currentBranch" | awk '{split($0,a,"-"); print a[1]}')
ticketNumber=$(echo "$currentBranch" | awk '{split($0,a,"-"); print a[2]}')
regex='^[0-9]+$' # Second part of the ticket id has to be an integer.
[[ $currentBranch == *"-"* ]] && [[ $ticketNumber =~ $regex ]] && ticketIdPrefix="$ticketCategory-$ticketNumber " || ticketIdPrefix=""
comment="$ticketIdPrefix$1" # Prefixing comment with the ticket id.
git commit -m "$comment" $2 $3 $4 $5
